module: entertainment_ecosystem

entities:
  - name: UserProfile
    fields:
      - name: username
        type: String
        validation:
          notNull: true
          size:
            min: 3
            max: 50
      - name: email
        type: String
        validation:
          notNull: true
          email: true
      - name: password
        type: String
        validation:
          notNull: true
          size:
            min: 8
            max: 255
      - name: registrationDate
        type: Date
        validation:
          notNull: true
      - name: profilePictureUrl
        type: String
        validation:
          size:
            max: 255
      - name: lastActiveDate
        type: Date
      - name: userStatus
        type: String
        validation:
          pattern: "^(Online|Offline|Away)$"
      - name: bio
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: reviews
        type: Review
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: watchlistMovies
        type: Movie
        relationType: ManyToMany
        joinTable: user_movie_watchlist
        joinColumns: user_id
        inverseJoinColumns: movie_id
        fetch: LAZY
        owner: true
        inverseField: watchlistUsers
      - name: favoriteArtists
        type: Artist
        relationType: ManyToMany
        joinTable: user_favorite_artists
        joinColumns: user_id
        inverseJoinColumns: artist_id
        fetch: LAZY
        owner: true
        inverseField: favoriteArtists
      - name: followedUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_followers
        joinColumns: followed_id
        inverseJoinColumns: follower_id
        mappedBy: followingUsers
        fetch: LAZY
        owner: false
        inverseField: followingUsers
      - name: followingUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_followers
        joinColumns: follower_id
        inverseJoinColumns: followed_id
        fetch: LAZY
        owner: true
        inverseField: followedUsers
      - name: favoriteGenres
        type: Genre
        relationType: ManyToMany
        joinTable: user_favorite_genres
        joinColumns: user_id
        inverseJoinColumns: genre_id
        fetch: EAGER
        owner: true
        inverseField: favoriteUsers
      - name: subscriptions
        type: Subscription
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: watchedEpisodes
        type: Episode
        relationType: ManyToMany
        joinTable: user_watched_episodes
        joinColumns: user_id
        inverseJoinColumns: episode_id
        fetch: LAZY
        owner: true
        inverseField: watchedByUsers
      - name: playedGames
        type: VideoGame
        relationType: ManyToMany
        joinTable: user_games
        joinColumns: user_id
        inverseJoinColumns: game_id
        fetch: LAZY
        owner: true
        inverseField: playedBy
      - name: forumThreads
        type: ForumThread
        relationType: OneToMany
        mappedBy: author
        inverseField: author
        fetch: LAZY
      - name: forumPosts
        type: ForumPost
        relationType: OneToMany
        mappedBy: author
        inverseField: author
        fetch: LAZY
      - name: achievements
        type: Achievement
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: hostedOnlineEvents
        type: OnlineEvent
        relationType: OneToMany
        mappedBy: host
        inverseField: host
        fetch: LAZY
      - name: attendedOnlineEvents
        type: OnlineEvent
        relationType: ManyToMany
        joinTable: online_event_attendees
        joinColumns: user_id
        inverseJoinColumns: event_id
        mappedBy: attendees
        fetch: LAZY
        owner: false
        inverseField: attendees
      - name: ownedMerchandise
        type: Merchandise
        relationType: ManyToMany
        joinTable: user_merchandise
        joinColumns: user_id
        inverseJoinColumns: merchandise_id
        fetch: LAZY
        owner: true
        inverseField: ownedByUsers
      - name: libraryPodcasts
        type: Podcast
        relationType: ManyToMany
        joinTable: user_podcast_library
        joinColumns: user_id
        inverseJoinColumns: podcast_id
        fetch: LAZY
        owner: true
        inverseField: listeners
      - name: listenedMusic
        type: MusicTrack
        relationType: ManyToMany
        joinTable: user_music_history
        joinColumns: user_id
        inverseJoinColumns: track_id
        fetch: LAZY
        owner: true
        inverseField: listenedByUsers
      - name: playlists
        type: Playlist
        relationType: OneToMany
        mappedBy: owner
        inverseField: owner
        fetch: LAZY
      - name: wallet
        type: UserWallet
        relationType: OneToOne
        joinColumn: wallet_id
        inverseField: user
        fetch: EAGER
        owner: true
      - name: digitalPurchases
        type: DigitalPurchase
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: gameSessions
        type: GameSession
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: gameReviewComments
        type: GameReviewComment
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: userPlaylists
        type: UserPlaylist
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: userPlaylistItems
        type: UserPlaylistItem
        relationType: OneToMany
        mappedBy: addedBy
        inverseField: addedBy
        fetch: LAZY
      - name: givenRatings
        type: ReviewRating
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: likedReviews
        type: ReviewLike
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: activityLogs
        type: UserActivityLog
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: EAGER
      - name: settings
        type: UserSetting
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: userRoles
        type: UserRole
        relationType: ManyToMany
        joinTable: user_roles
        joinColumns: user_id
        inverseJoinColumns: role_id
        fetch: LAZY
        owner: true
        inverseField: users
      - name: followers
        type: UserFollower
        relationType: OneToMany
        mappedBy: followed
        inverseField: followed
        fetch: LAZY
      - name: following
        type: UserFollower
        relationType: OneToMany
        mappedBy: follower
        inverseField: follower
        fetch: LAZY
      - name: userAchievements
        type: UserAchievement
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: notifications
        type: Notification
        relationType: OneToMany
        mappedBy: recipient
        inverseField: recipient
        fetch: EAGER
      - name: merchandiseReviews
        type: MerchandiseReview
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: preferences
        type: UserPreference
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: merchandiseSales
        type: MerchandiseSale
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: gamePlaySessions
        type: GamePlaySession
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: gameReviewUpvotes
        type: GameReviewUpvote
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: gameReviewDownvotes
        type: GameReviewDownvote
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: sentMessages
        type: UserMessage
        relationType: OneToMany
        mappedBy: sender
        inverseField: sender
        fetch: LAZY
      - name: receivedMessages
        type: UserMessage
        relationType: OneToMany
        mappedBy: receiver
        inverseField: receiver
        fetch: LAZY
      - name: enabledFeatureFlags
        type: FeatureFlag
        relationType: ManyToMany
        joinTable: user_feature_flags
        joinColumns: user_id
        inverseJoinColumns: feature_flag_id
        fetch: LAZY
        owner: true
        inverseField: enabledForUsers
      - name: messageThreads
        type: MessageThread
        relationType: ManyToMany
        mappedBy: participants
        fetch: LAZY
        owner: false
        inverseField: participants
      - name: loyaltyProgram
        type: UserLoyaltyProgram
        relationType: OneToOne
        mappedBy: user
        inverseField: user
        fetch: LAZY
        owner: false
      - name: hostedLiveStreams
        type: LiveStream
        relationType: OneToMany
        mappedBy: host
        inverseField: host
        fetch: LAZY
      - name: watchedLiveStreams
        type: LiveStreamViewer
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: badges
        type: UserBadge
        relationType: ManyToMany
        joinTable: user_badges
        joinColumns: user_id
        inverseJoinColumns: badge_id
        fetch: LAZY
        owner: true
        inverseField: users
      - name: userLevel
        type: UserLevel
        relationType: ManyToOne
        joinColumn: user_level_id
        inverseField: users
        fetch: EAGER
      - name: givenUserRatings
        type: UserRating
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: receivedUserRatings
        type: UserRating
        relationType: OneToMany
        mappedBy: ratedUser
        inverseField: ratedUser
        fetch: LAZY
      - name: moderator
        type: ForumModerator
        relationType: OneToOne
        mappedBy: user
        inverseField: user
        fetch: LAZY
        owner: false
      - name: connections
        type: UserConnection
        relationType: OneToMany
        mappedBy: user1
        inverseField: user1
        fetch: LAZY
      - name: connectedBy
        type: UserConnection
        relationType: OneToMany
        mappedBy: user2
        inverseField: user2
        fetch: LAZY
      - name: blockedUsers
        type: UserBlockedList
        relationType: OneToMany
        mappedBy: blocker
        inverseField: blocker
        fetch: LAZY
      - name: blockedByUsers
        type: UserBlockedList
        relationType: OneToMany
        mappedBy: blocked
        inverseField: blocked
        fetch: LAZY
      - name: reportedContent
        type: ReportedContent
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: reviewReplies
        type: ReviewReply
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: episodeReviews
        type: EpisodeReview
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: gameTransactions
        type: GameTransaction
        relationType: OneToMany
        mappedBy: user
        inverseField: user
        fetch: LAZY
      - name: country
        type: Country
        relationType: ManyToOne
        joinColumn: country_id
        inverseField: userProfiles
        fetch: EAGER


  - name: UserWallet
    fields:
      - name: balance
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: user
        type: UserProfile
        relationType: OneToOne
        mappedBy: wallet
        inverseField: wallet
        fetch: LAZY
        owner: false
      - name: transactions
        type: Transaction
        relationType: OneToMany
        mappedBy: wallet
        inverseField: wallet
        fetch: LAZY

  - name: Transaction
    fields:
      - name: amount
        type: Double
        validation:
          notNull: true
          min: 0
      - name: transactionDate
        type: Date
        validation:
          notNull: true
      - name: type
        type: String
        validation:
          notNull: true
          pattern: "^(Credit|Debit)$"
    relationships:
      - name: wallet
        type: UserWallet
        relationType: ManyToOne
        joinColumn: wallet_id
        inverseField: transactions
        fetch: EAGER
      - name: relatedInvoice
        type: Invoice
        relationType: OneToOne
        mappedBy: transaction
        inverseField: transaction
        fetch: LAZY
        owner: false
      - name: digitalPurchase
        type: DigitalPurchase
        relationType: OneToOne
        mappedBy: transaction
        inverseField: transaction
        fetch: LAZY
        owner: false

  - name: Invoice
    fields:
      - name: invoiceDate
        type: Date
        validation:
          notNull: true
      - name: amount
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: transaction
        type: Transaction
        relationType: OneToOne
        joinColumn: transaction_id
        inverseField: relatedInvoice
        fetch: EAGER
        owner: true

  - name: Artist
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: bio
        type: String
        validation:
          size:
            max: 1000
      - name: birthDate
        type: Date
        validation:
          notNull: true
      - name: nationality
        type: String
        validation:
          size:
            max: 50
    relationships:
      - name: favoriteArtists
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_favorite_artists
        joinColumns: artist_id
        inverseJoinColumns: user_id
        mappedBy: favoriteArtists
        fetch: LAZY
        owner: false
        inverseField: favoriteArtists
      - name: composedMusic
        type: MusicTrack
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY
      - name: albums
        type: Album
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY
      - name: booksAuthored
        type: Book
        relationType: OneToMany
        mappedBy: author
        inverseField: author
        fetch: LAZY
      - name: participatedInEvents
        type: LiveEvent
        relationType: ManyToMany
        joinTable: event_performers
        joinColumns: artist_id
        inverseJoinColumns: event_id
        mappedBy: performers
        fetch: LAZY
        owner: false
        inverseField: performers
      - name: hostedPodcasts
        type: Podcast
        relationType: OneToMany
        mappedBy: host
        inverseField: host
        fetch: EAGER
      - name: managedMerchandise
        type: Merchandise
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY
      - name: managedGames
        type: VideoGame
        relationType: OneToMany
        mappedBy: developer
        inverseField: developer
        fetch: LAZY
      - name: manager
        type: Manager
        relationType: ManyToOne
        joinColumn: manager_id
        inverseField: artists
        fetch: LAZY
      - name: awards
        type: ArtistAward
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY
      - name: actedInMovies
        type: Movie
        relationType: ManyToMany
        joinTable: movie_cast
        joinColumns: artist_id
        inverseJoinColumns: movie_id
        mappedBy: cast
        fetch: LAZY
        owner: false
        inverseField: cast
      - name: directedMovies
        type: Movie
        relationType: OneToMany
        mappedBy: director
        inverseField: director
        fetch: LAZY
      - name: directedShows
        type: TVShow
        relationType: OneToMany
        mappedBy: director
        inverseField: director
        fetch: LAZY
      - name: managedAssets
        type: DigitalAsset
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY
      - name: actedInShows
        type: TVShow
        relationType: ManyToMany
        joinTable: tvshow_cast
        joinColumns: artist_id
        inverseJoinColumns: tvshow_id
        mappedBy: cast
        fetch: LAZY
        owner: false
        inverseField: cast
      - name: socialMediaLinks
        type: ArtistSocialMedia
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY
      - name: episodeCredits
        type: EpisodeCredit
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY
      - name: authoredAudiobooks
        type: Audiobook
        relationType: OneToMany
        mappedBy: author
        inverseField: author
        fetch: LAZY
      - name: directedMusicVideos
        type: MusicVideo
        relationType: OneToMany
        mappedBy: director
        inverseField: director
        fetch: LAZY
      - name: groups
        type: ArtistGroup
        relationType: ManyToMany
        joinTable: artist_group_members
        joinColumns: artist_id
        inverseJoinColumns: group_id
        mappedBy: members
        fetch: LAZY
        owner: false
        inverseField: members
      - name: tours
        type: Tour
        relationType: OneToMany
        mappedBy: artist
        inverseField: artist
        fetch: LAZY

  - name: Manager
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: email
        type: String
        validation:
          notNull: true
          email: true
    relationships:
      - name: artists
        type: Artist
        relationType: OneToMany
        mappedBy: manager
        inverseField: manager
        fetch: LAZY

  - name: Movie
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
      - name: durationMinutes
        type: Integer
        validation:
          notNull: true
          min: 1
      - name: synopsis
        type: String
        validation:
          size:
            max: 2000
      - name: boxOfficeRevenue
        type: Double
        validation:
          min: 0
    relationships:
      - name: cast
        type: Artist
        relationType: ManyToMany
        joinTable: movie_cast
        joinColumns: movie_id
        inverseJoinColumns: artist_id
        fetch: LAZY
        owner: true
        inverseField: actedInMovies
      - name: director
        type: Artist
        relationType: ManyToOne
        joinColumn: director_id
        inverseField: directedMovies
        fetch: EAGER
      - name: reviews
        type: Review
        relationType: OneToMany
        mappedBy: movie
        inverseField: movie
        fetch: LAZY
      - name: genres
        type: Genre
        relationType: ManyToMany
        joinTable: movie_genres
        joinColumns: movie_id
        inverseJoinColumns: genre_id
        fetch: EAGER
        owner: true
        inverseField: movies
      - name: watchlistUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_movie_watchlist
        joinColumns: movie_id
        inverseJoinColumns: user_id
        mappedBy: watchlistMovies
        fetch: LAZY
        owner: false
        inverseField: watchlistMovies
      - name: relatedMerchandise
        type: Merchandise
        relationType: ManyToMany
        joinTable: merchandise_movies
        joinColumns: movie_id
        inverseJoinColumns: merchandise_id
        mappedBy: relatedMovies
        fetch: LAZY
        owner: false
        inverseField: relatedMovies
      - name: productionCompany
        type: ProductionCompany
        relationType: ManyToOne
        joinColumn: company_id
        inverseField: movies
        fetch: EAGER
      - name: purchases
        type: DigitalPurchase
        relationType: OneToMany
        mappedBy: movie
        inverseField: movie
        fetch: LAZY
      - name: formats
        type: MovieFormat
        relationType: ManyToMany
        joinTable: movie_formats
        joinColumns: movie_id
        inverseJoinColumns: format_id
        fetch: EAGER
        owner: true
        inverseField: movies
      - name: streamingLicenses
        type: StreamingContentLicense
        relationType: OneToMany
        mappedBy: movie
        inverseField: movie
        fetch: LAZY
      - name: provider
        type: ContentProvider
        relationType: ManyToOne
        joinColumn: provider_id
        inverseField: providedMovies
        fetch: EAGER
      - name: movieStudio
        type: MovieStudio
        relationType: ManyToOne
        joinColumn: movie_studio_id
        inverseField: movies
        fetch: EAGER
      - name: contentRating
        type: ContentRating
        relationType: ManyToOne
        joinColumn: content_rating_id
        inverseField: ratedMovies
        fetch: EAGER
      - name: tags
        type: ContentTag
        relationType: ManyToMany
        joinTable: movie_tags
        joinColumns: tag_id
        inverseJoinColumns: movie_id
        fetch: LAZY
        owner: true
        inverseField: movies
      - name: languages
        type: ContentLanguage
        relationType: ManyToMany
        joinTable: movie_languages
        joinColumns: movie_id
        inverseJoinColumns: language_id
        fetch: EAGER
        owner: true
        inverseField: movies
      - name: platforms
        type: StreamingPlatform
        relationType: ManyToMany
        joinTable: movie_platforms
        joinColumns: movie_id
        inverseJoinColumns: platform_id
        fetch: LAZY
        owner: true
        inverseField: movies
      - name: soundtrack
        type: MovieSoundtrack
        relationType: OneToOne
        mappedBy: movie
        inverseField: movie
        fetch: LAZY
        owner: false
      - name: festivals
        type: MovieFestival
        relationType: ManyToMany
        joinTable: festival_movies
        joinColumns: movie_id
        inverseJoinColumns: festival_id
        mappedBy: movies
        fetch: LAZY
        owner: false
        inverseField: movies

  - name: TVShow
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseYear
        type: Integer
        validation:
          notNull: true
          min: 1900
      - name: totalSeasons
        type: Integer
        validation:
          notNull: true
          min: 1
      - name: synopsis
        type: String
        validation:
          size:
            max: 1000
    relationships:
      - name: seasons
        type: Season
        relationType: OneToMany
        mappedBy: show
        inverseField: show
        fetch: LAZY
      - name: director
        type: Artist
        relationType: ManyToOne
        joinColumn: director_id
        inverseField: directedShows
        fetch: EAGER
      - name: genres
        type: Genre
        relationType: ManyToMany
        joinTable: tvshow_genres
        joinColumns: tvshow_id
        inverseJoinColumns: genre_id
        fetch: EAGER
        owner: true
        inverseField: tvShows
      - name: relatedMerchandise
        type: Merchandise
        relationType: ManyToMany
        joinTable: merchandise_shows
        joinColumns: tvshow_id
        inverseJoinColumns: merchandise_id
        mappedBy: relatedShows
        fetch: LAZY
        owner: false
        inverseField: relatedShows
      - name: productionCompany
        type: ProductionCompany
        relationType: ManyToOne
        joinColumn: company_id
        inverseField: tvShows
        fetch: EAGER
      - name: cast
        type: Artist
        relationType: ManyToMany
        joinTable: tvshow_cast
        joinColumns: tvshow_id
        inverseJoinColumns: artist_id
        fetch: LAZY
        owner: true
        inverseField: actedInShows
      - name: streamingLicenses
        type: StreamingContentLicense
        relationType: OneToMany
        mappedBy: tvShow
        inverseField: tvShow
        fetch: LAZY
      - name: provider
        type: ContentProvider
        relationType: ManyToOne
        joinColumn: provider_id
        inverseField: providedTvShows
        fetch: EAGER
      - name: tvShowStudio
        type: TVShowStudio
        relationType: ManyToOne
        joinColumn: tv_show_studio_id
        inverseField: tvShows
        fetch: EAGER
      - name: contentRating
        type: ContentRating
        relationType: ManyToOne
        joinColumn: content_rating_id
        inverseField: ratedTvShows
        fetch: EAGER
      - name: tags
        type: ContentTag
        relationType: ManyToMany
        joinTable: tvshow_tags
        joinColumns: tag_id
        inverseJoinColumns: tvshow_id
        fetch: LAZY
        owner: true
        inverseField: tvShows
      - name: languages
        type: ContentLanguage
        relationType: ManyToMany
        joinTable: tvshow_languages
        joinColumns: tvshow_id
        inverseJoinColumns: language_id
        fetch: EAGER
        owner: true
        inverseField: tvShows
      - name: platforms
        type: StreamingPlatform
        relationType: ManyToMany
        joinTable: tvshow_platforms
        joinColumns: tvshow_id
        inverseJoinColumns: platform_id
        fetch: LAZY
        owner: true
        inverseField: tvShows

  - name: ProductionCompany
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: foundedDate
        type: Date
      - name: location
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: movies
        type: Movie
        relationType: OneToMany
        mappedBy: productionCompany
        inverseField: productionCompany
        fetch: LAZY
      - name: tvShows
        type: TVShow
        relationType: OneToMany
        mappedBy: productionCompany
        inverseField: productionCompany
        fetch: LAZY
      - name: staff
        type: Employee
        relationType: OneToMany
        mappedBy: productionCompany
        inverseField: productionCompany
        fetch: LAZY

  - name: Season
    fields:
      - name: seasonNumber
        type: Integer
        validation:
          notNull: true
          min: 1
    relationships:
      - name: show
        type: TVShow
        relationType: ManyToOne
        joinColumn: tvshow_id
        inverseField: seasons
        fetch: EAGER
      - name: episodes
        type: Episode
        relationType: OneToMany
        mappedBy: season
        inverseField: season
        fetch: LAZY

  - name: Episode
    fields:
      - name: episodeNumber
        type: Integer
        validation:
          notNull: true
          min: 1
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: description
        type: String
        validation:
          size:
            max: 500
      - name: durationMinutes
        type: Integer
        validation:
          min: 1
    relationships:
      - name: season
        type: Season
        relationType: ManyToOne
        joinColumn: season_id
        inverseField: episodes
        fetch: EAGER
      - name: watchedByUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_watched_episodes
        joinColumns: episode_id
        inverseJoinColumns: user_id
        mappedBy: watchedEpisodes
        fetch: LAZY
        owner: false
        inverseField: watchedEpisodes
      - name: relatedPodcastEpisode
        type: PodcastEpisode
        relationType: OneToOne
        mappedBy: relatedEpisode
        inverseField: relatedEpisode
        fetch: EAGER
        owner: true
      - name: credits
        type: EpisodeCredit
        relationType: OneToMany
        mappedBy: episode
        inverseField: episode
        fetch: LAZY
      - name: reviews
        type: EpisodeReview
        relationType: OneToMany
        mappedBy: episode
        inverseField: episode
        fetch: LAZY

  - name: MusicTrack
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: durationSeconds
        type: Integer
        validation:
          notNull: true
          min: 1
      - name: releaseDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: album
        type: Album
        relationType: ManyToOne
        joinColumn: album_id
        inverseField: tracks
        fetch: EAGER
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: composedMusic
        fetch: EAGER
      - name: genres
        type: Genre
        relationType: ManyToMany
        joinTable: music_track_genres
        joinColumns: track_id
        inverseJoinColumns: genre_id
        fetch: LAZY
        owner: true
        inverseField: musicTracks
      - name: listenedByUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_music_history
        joinColumns: track_id
        inverseJoinColumns: user_id
        mappedBy: listenedMusic
        fetch: LAZY
        owner: false
        inverseField: listenedMusic
      - name: playlistItems
        type: PlaylistItem
        relationType: OneToMany
        mappedBy: track
        inverseField: track
        fetch: LAZY
      - name: purchases
        type: DigitalPurchase
        relationType: OneToMany
        mappedBy: musicTrack
        inverseField: musicTrack
        fetch: LAZY
      - name: formats
        type: MusicFormat
        relationType: ManyToMany
        joinTable: music_formats
        joinColumns: track_id
        inverseJoinColumns: format_id
        fetch: EAGER
        owner: true
        inverseField: musicTracks
      - name: streamingLicenses
        type: StreamingContentLicense
        relationType: OneToMany
        mappedBy: musicTrack
        inverseField: musicTrack
        fetch: LAZY
      - name: provider
        type: ContentProvider
        relationType: ManyToOne
        joinColumn: provider_id
        inverseField: providedMusicTracks
        fetch: EAGER
      - name: soundtrack
        type: MovieSoundtrack
        relationType: ManyToOne
        joinColumn: soundtrack_id
        inverseField: musicTracks
        fetch: EAGER
      - name: musicVideos
        type: MusicVideo
        relationType: OneToMany
        mappedBy: musicTrack
        inverseField: musicTrack
        fetch: LAZY


  - name: Album
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: albums
        fetch: EAGER
      - name: tracks
        type: MusicTrack
        relationType: OneToMany
        mappedBy: album
        inverseField: album
        fetch: LAZY
      - name: genres
        type: Genre
        relationType: ManyToMany
        joinTable: album_genres
        joinColumns: album_id
        inverseJoinColumns: genre_id
        inverseField: Albums
        fetch: EAGER
        owner: true
      - name: musicLabel
        type: MusicLabel
        relationType: ManyToOne
        joinColumn: music_label_id
        inverseField: albums
        fetch: EAGER

  - name: Book
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: publishedDate
        type: Date
        validation:
          notNull: true
      - name: isbn
        type: String
        validation:
          notNull: true
          size:
            min: 10
            max: 13
      - name: synopsis
        type: String
        validation:
          size:
            max: 1000
    relationships:
      - name: author
        type: Artist
        relationType: ManyToOne
        joinColumn: author_id
        inverseField: booksAuthored
        fetch: EAGER
      - name: publisher
        type: Publisher
        relationType: ManyToOne
        joinColumn: publisher_id
        inverseField: books
        fetch: EAGER
      - name: reviews
        type: Review
        relationType: OneToMany
        mappedBy: book
        inverseField: book
        fetch: LAZY
      - name: genres
        type: Genre
        relationType: ManyToMany
        joinTable: book_genres
        joinColumns: book_id
        inverseJoinColumns: genre_id
        fetch: EAGER
        owner: true
        inverseField: bookGenres
      - name: series
        type: BookSeries
        relationType: ManyToOne
        joinColumn: series_id
        inverseField: books
        fetch: EAGER
      - name: characters
        type: BookCharacter
        relationType: ManyToMany
        joinTable: book_characters
        joinColumns: book_id
        inverseJoinColumns: character_id
        mappedBy: books
        fetch: LAZY
        owner: false
        inverseField: books


  - name: Publisher
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: website
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: books
        type: Book
        relationType: OneToMany
        mappedBy: publisher
        inverseField: publisher
        fetch: LAZY
      - name: podcasts
        type: Podcast
        relationType: OneToMany
        mappedBy: publisher
        inverseField: publisher
        fetch: LAZY
      - name: videoGames
        type: VideoGame
        relationType: OneToMany
        mappedBy: publisher
        inverseField: publisher
        fetch: LAZY
      - name: audiobooks
        type: Audiobook
        relationType: OneToMany
        mappedBy: publisher
        inverseField: publisher
        fetch: LAZY

  - name: LiveEvent
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: eventDate
        type: Date
        validation:
          notNull: true
      - name: description
        type: String
        validation:
          size:
            max: 1000
    relationships:
      - name: performers
        type: Artist
        relationType: ManyToMany
        joinTable: event_performers
        joinColumns: event_id
        inverseJoinColumns: artist_id
        fetch: LAZY
        owner: true
        inverseField: participatedInEvents
      - name: tickets
        type: Ticket
        relationType: OneToMany
        mappedBy: event
        inverseField: event
        fetch: LAZY
      - name: eventType
        type: EventType
        relationType: ManyToOne
        joinColumn: event_type_id
        inverseField: events
        fetch: EAGER
      - name: location
        type: EventLocation
        relationType: ManyToOne
        joinColumn: location_id
        inverseField: liveEvents
        fetch: EAGER
      - name: sponsor
        type: Sponsor
        relationType: ManyToOne
        joinColumn: sponsor_id
        inverseField: sponsoredEvents
        fetch: EAGER
      - name: audience
        type: EventAudience
        relationType: OneToOne
        joinColumn: audience_id
        inverseField: event
        fetch: LAZY
        owner: true
      - name: sponsorships
        type: EventSponsorship
        relationType: OneToMany
        mappedBy: event
        inverseField: event
        fetch: LAZY
      - name: tags
        type: ContentTag
        relationType: ManyToMany
        joinTable: event_tags
        joinColumns: event_id
        inverseJoinColumns: tag_id
        fetch: EAGER
        owner: true
        inverseField: liveEvents
      - name: venue
        type: ConcertVenue
        relationType: ManyToOne
        joinColumn: venue_id
        inverseField: concerts
        fetch: EAGER
      - name: tour
        type: Tour
        relationType: ManyToOne
        joinColumn: tour_id
        inverseField: liveEvents
        fetch: EAGER


  - name: EventType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: events
        type: LiveEvent
        relationType: OneToMany
        mappedBy: eventType
        inverseField: eventType
        fetch: LAZY

  - name: Ticket
    fields:
      - name: ticketNumber
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 20
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
      - name: seatInfo
        type: String
        validation:
          size:
            max: 50
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: tickets
        fetch: EAGER
      - name: event
        type: LiveEvent
        relationType: ManyToOne
        joinColumn: event_id
        inverseField: tickets
        fetch: EAGER
      - name: status
        type: TicketStatus
        relationType: ManyToOne
        joinColumn: status_id
        inverseField: tickets
        fetch: EAGER
      - name: booking
        type: Booking
        relationType: ManyToOne
        joinColumn: booking_id
        inverseField: tickets
        fetch: EAGER
      - name: type
        type: EventTicketType
        relationType: ManyToOne
        joinColumn: ticket_type_id
        inverseField: tickets
        fetch: EAGER

  - name: TicketStatus
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          pattern: "^(Available|Sold|Used|Cancelled)$"
    relationships:
      - name: tickets
        type: Ticket
        relationType: OneToMany
        mappedBy: status
        inverseField: status
        fetch: LAZY

  - name: Review
    fields:
      - name: rating
        type: Integer
        validation:
          notNull: true
          min: 1
          max: 10
      - name: comment
        type: String
        validation:
          size:
            max: 500
      - name: reviewDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: reviews
        fetch: EAGER
      - name: movie
        type: Movie
        relationType: ManyToOne
        joinColumn: movie_id
        inverseField: reviews
        fetch: LAZY
      - name: book
        type: Book
        relationType: ManyToOne
        joinColumn: book_id
        inverseField: reviews
        fetch: LAZY
      - name: videoGame
        type: VideoGame
        relationType: ManyToOne
        joinColumn: video_game_id
        inverseField: generalReviews
        fetch: LAZY
      - name: reviewComments
        type: ReviewComment
        relationType: OneToMany
        mappedBy: review
        inverseField: review
        fetch: LAZY
      - name: mediaFile
        type: MediaFile
        relationType: OneToOne
        joinColumn: media_file_id
        inverseField: review
        fetch: EAGER
        owner: true
      - name: ratings
        type: ReviewRating
        relationType: OneToMany
        mappedBy: review
        inverseField: review
        fetch: LAZY
      - name: likes
        type: ReviewLike
        relationType: OneToMany
        mappedBy: review
        inverseField: review
        fetch: LAZY
      - name: reportedContent
        type: ReportedContent
        relationType: OneToMany
        mappedBy: review
        inverseField: review
        fetch: LAZY

  - name: ReviewComment
    fields:
      - name: commentText
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 255
      - name: commentDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: reviewComments
        fetch: EAGER
      - name: review
        type: Review
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: reviewComments
        fetch: EAGER
      - name: replies
        type: ReviewReply
        relationType: OneToMany
        mappedBy: reviewComment
        inverseField: reviewComment
        fetch: LAZY

  - name: StreamingPlatform
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: website
        type: String
        validation:
          notNull: true
          size:
            max: 255
    relationships:
      - name: movies
        type: Movie
        relationType: ManyToMany
        joinTable: movie_platforms
        joinColumns: platform_id
        inverseJoinColumns: movie_id
        mappedBy: platforms
        fetch: LAZY
        owner: false
        inverseField: platforms
      - name: tvShows
        type: TVShow
        relationType: ManyToMany
        joinTable: tvshow_platforms
        joinColumns: platform_id
        inverseJoinColumns: tvshow_id
        mappedBy: platforms
        fetch: LAZY
        owner: false
        inverseField: platforms
      - name: subscriptions
        type: Subscription
        relationType: OneToMany
        mappedBy: platform
        inverseField: platform
        fetch: LAZY
      - name: streamingService
        type: StreamingService
        relationType: ManyToOne
        joinColumn: service_id
        inverseField: platforms
        fetch: EAGER
      - name: onlinePlatform
        type: OnlinePlatform
        relationType: ManyToOne
        joinColumn: online_platform_id
        inverseField: streams
        fetch: EAGER
      - name: adCampaigns
        type: AdCampaign
        relationType: ManyToMany
        joinTable: ad_campaign_platforms
        joinColumns: platform_id
        inverseJoinColumns: campaign_id
        mappedBy: displayedOnPlatforms
        fetch: LAZY
        owner: false
        inverseField: displayedOnPlatforms

  - name: Subscription
    fields:
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: endDate
        type: Date
        validation:
          notNull: true
      - name: status
        type: String
        validation:
          notNull: true
          pattern: "^(Active|Expired|Cancelled)$"
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: subscriptions
        fetch: EAGER
      - name: platform
        type: StreamingPlatform
        relationType: ManyToOne
        joinColumn: platform_id
        inverseField: subscriptions
        fetch: EAGER
      - name: plan
        type: SubscriptionPlan
        relationType: ManyToOne
        joinColumn: plan_id
        inverseField: subscriptions
        fetch: EAGER

  - name: SubscriptionPlan
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
      - name: description
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: subscriptions
        type: Subscription
        relationType: OneToMany
        mappedBy: plan
        inverseField: plan
        fetch: LAZY
      - name: service
        type: StreamingService
        relationType: ManyToOne
        joinColumn: service_id
        inverseField: plans
        fetch: EAGER
      - name: includedStreamingContentLicenses
        type: StreamingContentLicense
        relationType: OneToMany
        mappedBy: subscriptionPlan
        inverseField: subscriptionPlan
        fetch: LAZY
      - name: tier
        type: SubscriptionTier
        relationType: OneToOne
        joinColumn: tier_id
        inverseField: subscriptionPlan
        fetch: EAGER
        owner: true
      - name: features
        type: SubscriptionFeature
        relationType: ManyToMany
        joinTable: subscription_plan_features
        joinColumns: plan_id
        inverseJoinColumns: feature_id
        mappedBy: subscriptionPlans
        fetch: LAZY
        owner: false
        inverseField: subscriptionPlans


  - name: Genre
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: movies
        type: Movie
        relationType: ManyToMany
        joinTable: movie_genres
        joinColumns: genre_id
        inverseJoinColumns: movie_id
        inverseField: genres
        mappedBy: genres
        fetch: LAZY
        owner: false
      - name: tvShows
        type: TVShow
        relationType: ManyToMany
        joinTable: tvshow_genres
        joinColumns: genre_id
        inverseJoinColumns: tvshow_id
        inverseField: genres
        mappedBy: genres
        fetch: LAZY
        owner: false
      - name: bookGenres
        type: Book
        relationType: ManyToMany
        joinTable: book_genres
        joinColumns: genre_id
        inverseJoinColumns: book_id
        mappedBy: genres
        inverseField: genres
        fetch: LAZY
        owner: false
      - name: musicTracks
        type: MusicTrack
        relationType: ManyToMany
        joinTable: genre_music_tracks
        joinColumns: genre_id
        inverseJoinColumns: track_id
        inverseField: genres
        mappedBy: genres
        fetch: LAZY
        owner: false
      - name: favoriteUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_favorite_genres
        joinColumns: genre_id
        inverseJoinColumns: user_id
        mappedBy: favoriteGenres
        fetch: LAZY
        owner: false
        inverseField: favoriteGenres
      - name: videoGames
        type: VideoGame
        relationType: ManyToMany
        joinTable: video_game_genres
        joinColumns: genre_id
        inverseJoinColumns: video_game_id
        mappedBy: genres
        inverseField: genres
        fetch: LAZY
        owner: false
      - name: podcasts
        type: Podcast
        relationType: ManyToMany
        joinTable: podcast_genres
        joinColumns: genre_id
        inverseJoinColumns: podcast_id
        mappedBy: genres
        fetch: LAZY
        owner: true
        inverseField: genres
      - name: albums
        type: Album
        relationType: ManyToMany
        mappedBy: genres # This must match the field name in your Album entity
        fetch: LAZY
        owner: false
        inverseField: genres
      - name: category
        type: MusicGenreCategory
        relationType: ManyToOne
        joinColumn: category_id
        inverseField: genres
        fetch: EAGER

  - name: VideoGame
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
      - name: developer
        type: Artist
        relationType: ManyToOne
        joinColumn: developer_id
        inverseField: managedGames
        fetch: EAGER
      - name: publisher
        type: Publisher
        relationType: ManyToOne
        joinColumn: publisher_id
        inverseField: videoGames
        fetch: EAGER
      - name: platform
        type: String
        validation:
          notNull: true
          pattern: "^(PC|PlayStation|Xbox|Nintendo)$"
    relationships:
      - name: genres
        type: Genre
        relationType: ManyToMany
        joinTable: video_game_genres
        joinColumns: video_game_id
        inverseJoinColumns: genre_id
        fetch: EAGER
        owner: true
        inverseField: videoGames
      - name: generalReviews
        type: Review
        relationType: OneToMany
        mappedBy: videoGame
        inverseField: videoGame
        fetch: LAZY
      - name: gameReviews
        type: GameReview
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY
      - name: playedBy
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_games
        joinColumns: game_id
        inverseJoinColumns: user_id
        mappedBy: playedGames
        fetch: LAZY
        owner: false
        inverseField: playedGames
      - name: achievements
        type: GameAchievement
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY
      - name: sessions
        type: GameSession
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY
      - name: developerStudio
        type: DevelopmentStudio
        relationType: ManyToOne
        joinColumn: studio_id
        inverseField: games
        fetch: EAGER
      - name: purchases
        type: DigitalPurchase
        relationType: OneToMany
        mappedBy: videoGame
        inverseField: videoGame
        fetch: LAZY
      - name: platforms
        type: GamePlatform
        relationType: ManyToMany
        joinTable: video_game_platforms
        joinColumns: game_id
        inverseJoinColumns: platform_id
        fetch: EAGER
        owner: true
        inverseField: videoGames
      - name: contentRating
        type: ContentRating
        relationType: ManyToOne
        joinColumn: content_rating_id
        inverseField: ratedVideoGames
        fetch: EAGER
      - name: tags
        type: ContentTag
        relationType: ManyToMany
        joinTable: videogame_tags
        joinColumns: tag_id
        inverseJoinColumns: game_id
        fetch: LAZY
        owner: true
        inverseField: videoGames
      - name: ratings
        type: VideoGameRating
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY
      - name: gamePlaySessions
        type: GamePlaySession
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY
      - name: gameReviewUpvotes
        type: GameReviewUpvote
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY
      - name: gameReviewDownvotes
        type: GameReviewDownvote
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY
      - name: contentRatingBoard
        type: ContentRatingBoard
        relationType: ManyToOne
        joinColumn: rating_board_id
        inverseField: ratedVideoGames
        fetch: EAGER
      - name: expansionPacks
        type: GameExpansionPack
        relationType: OneToMany
        mappedBy: baseGame
        inverseField: baseGame
        fetch: LAZY
      - name: liveStreams
        type: LiveStream
        relationType: OneToMany
        mappedBy: game
        inverseField: game
        fetch: LAZY


  - name: GameSession
    fields:
      - name: score
        type: Integer
        validation:
          min: 0
      - name: durationMinutes
        type: Integer
        validation:
          min: 1
      - name: sessionDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gameSessions
        fetch: EAGER
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: sessions
        fetch: EAGER

  - name: GameAchievement
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: description
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 255
      - name: achievementDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: achievements
        fetch: EAGER
      - name: userAchievements
        type: UserAchievement
        relationType: OneToMany
        mappedBy: achievement
        inverseField: achievement
        fetch: LAZY

  - name: Podcast
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: description
        type: String
        validation:
          size:
            max: 1000
      - name: totalEpisodes
        type: Integer
        validation:
          min: 1
    relationships:
      - name: host
        type: Artist
        relationType: ManyToOne
        joinColumn: host_id
        inverseField: hostedPodcasts
        fetch: EAGER
      - name: episodes
        type: PodcastEpisode
        relationType: OneToMany
        mappedBy: podcast
        inverseField: podcast
        fetch: LAZY
      - name: genres
        type: Genre
        relationType: ManyToMany
        joinTable: podcast_genres
        joinColumns: podcast_id
        inverseJoinColumns: genre_id
        mappedBy: podcasts
        fetch: LAZY
        owner: false
        inverseField: podcasts
      - name: listeners
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_podcast_library
        joinColumns: podcast_id
        inverseJoinColumns: user_id
        mappedBy: libraryPodcasts
        fetch: LAZY
        owner: false
        inverseField: libraryPodcasts
      - name: publisher
        type: Publisher
        relationType: ManyToOne
        joinColumn: publisher_id
        inverseField: podcasts
        fetch: EAGER
      - name: categories
        type: PodcastCategory
        relationType: ManyToMany
        joinTable: podcast_categories
        joinColumns: podcast_id
        inverseJoinColumns: category_id
        fetch: EAGER
        owner: true
        inverseField: podcasts
      - name: guests
        type: PodcastGuest
        relationType: OneToMany
        mappedBy: podcast
        inverseField: podcast
        fetch: LAZY
      - name: provider
        type: ContentProvider
        relationType: ManyToOne
        joinColumn: provider_id
        inverseField: providedPodcasts
        fetch: EAGER
      - name: languages
        type: ContentLanguage
        relationType: ManyToMany
        joinTable: podcast_languages
        joinColumns: podcast_id
        inverseJoinColumns: language_id
        fetch: EAGER
        owner: true
        inverseField: podcasts

  - name: PodcastEpisode
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
      - name: durationMinutes
        type: Integer
        validation:
          min: 1
    relationships:
      - name: podcast
        type: Podcast
        relationType: ManyToOne
        joinColumn: podcast_id
        inverseField: episodes
        fetch: EAGER
      - name: relatedEpisode
        type: Episode
        relationType: OneToOne
        mappedBy: relatedPodcastEpisode
        inverseField: relatedPodcastEpisode
        fetch: EAGER
        owner: true
      - name: guestAppearances
        type: PodcastGuest
        relationType: ManyToMany
        joinTable: podcast_guest_appearances
        joinColumns: episode_id
        inverseJoinColumns: guest_id
        fetch: LAZY
        owner: true
        inverseField: appearances

  - name: OnlineEvent
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: eventDate
        type: Date
        validation:
          notNull: true
      - name: platformUrl
        type: String
        validation:
          notNull: true
          size:
            max: 255
      - name: description
        type: String
        validation:
          size:
            max: 1000
    relationships:
      - name: host
        type: UserProfile
        relationType: ManyToOne
        joinColumn: host_id
        inverseField: hostedOnlineEvents
        fetch: EAGER
      - name: attendees
        type: UserProfile
        relationType: ManyToMany
        joinTable: online_event_attendees
        joinColumns: event_id
        inverseJoinColumns: user_id
        fetch: LAZY
        owner: true
        inverseField: attendedOnlineEvents
      - name: type
        type: OnlineEventType
        relationType: ManyToOne
        joinColumn: type_id
        inverseField: events
        fetch: EAGER

  - name: OnlineEventType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: events
        type: OnlineEvent
        relationType: OneToMany
        mappedBy: type
        inverseField: type
        fetch: LAZY

  - name: EventLocation
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: address
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 255
    relationships:
      - name: liveEvents
        type: LiveEvent
        relationType: OneToMany
        mappedBy: location
        inverseField: location
        fetch: LAZY
      - name: contactPerson
        type: Employee
        relationType: ManyToOne
        joinColumn: employee_id
        inverseField: managedLocations
        fetch: EAGER

  - name: Merchandise
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: description
        type: String
        validation:
          size:
            max: 500
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: managedMerchandise
        fetch: EAGER
      - name: relatedMovies
        type: Movie
        relationType: ManyToMany
        joinTable: merchandise_movies
        joinColumns: merchandise_id
        inverseJoinColumns: movie_id
        fetch: LAZY
        owner: true
        inverseField: relatedMerchandise
      - name: relatedShows
        type: TVShow
        relationType: ManyToMany
        joinTable: merchandise_shows
        joinColumns: merchandise_id
        inverseJoinColumns: tvshow_id
        fetch: LAZY
        owner: true
        inverseField: relatedMerchandise
      - name: ownedByUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_merchandise
        joinColumns: merchandise_id
        inverseJoinColumns: user_id
        mappedBy: ownedMerchandise
        fetch: LAZY
        owner: false
        inverseField: ownedMerchandise
      - name: productType
        type: MerchandiseType
        relationType: ManyToOne
        joinColumn: type_id
        inverseField: items
        fetch: EAGER
      - name: inventory
        type: MerchandiseInventory
        relationType: OneToOne
        mappedBy: merchandiseItem
        inverseField: merchandiseItem
        fetch: LAZY
        owner: false
      - name: reviews
        type: MerchandiseReview
        relationType: OneToMany
        mappedBy: merchandise
        inverseField: merchandise
        fetch: LAZY
      - name: sales
        type: MerchandiseSale
        relationType: OneToMany
        mappedBy: merchandiseItem
        inverseField: merchandiseItem
        fetch: LAZY
      - name: supplier
        type: MerchandiseSupplier
        relationType: ManyToOne
        joinColumn: supplier_id
        inverseField: suppliedMerchandise
        fetch: EAGER
      - name: shipments
        type: MerchandiseShipping
        relationType: OneToMany
        mappedBy: merchandiseItem
        inverseField: merchandiseItem
        fetch: LAZY
      - name: orderItems
        type: MerchandiseOrderItem
        relationType: OneToMany
        mappedBy: merchandiseItem
        inverseField: merchandiseItem
        fetch: LAZY
      - name: collection
        type: MerchandiseCollection
        relationType: ManyToOne
        joinColumn: collection_id
        inverseField: items
        fetch: EAGER
      - name: category
        type: MerchandiseCategory
        relationType: ManyToOne
        joinColumn: category_id
        inverseField: merchandise
        fetch: EAGER
      - name: stockHistory
        type: MerchandiseStockHistory
        relationType: OneToMany
        mappedBy: merchandiseItem
        inverseField: merchandiseItem
        fetch: LAZY

  - name: MerchandiseType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: items
        type: Merchandise
        relationType: OneToMany
        mappedBy: productType
        inverseField: productType
        fetch: LAZY

  - name: ForumThread
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 255
      - name: creationDate
        type: Date
        validation:
          notNull: true
      - name: lastPostDate
        type: Date
    relationships:
      - name: author
        type: UserProfile
        relationType: ManyToOne
        joinColumn: author_id
        inverseField: forumThreads
        fetch: EAGER
      - name: forumPosts
        type: ForumPost
        relationType: OneToMany
        mappedBy: thread
        inverseField: thread
        fetch: LAZY
      - name: category
        type: ForumCategory
        relationType: ManyToOne
        joinColumn: category_id
        inverseField: threads
        fetch: EAGER
      - name: tags
        type: ForumThreadTag
        relationType: ManyToMany
        joinTable: thread_tags
        joinColumns: thread_id
        inverseJoinColumns: tag_id
        mappedBy: threads
        fetch: LAZY
        owner: false
        inverseField: threads

  - name: ForumPost
    fields:
      - name: content
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 2000
      - name: postDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: author
        type: UserProfile
        relationType: ManyToOne
        joinColumn: author_id
        inverseField: forumPosts
        fetch: EAGER
      - name: thread
        type: ForumThread
        relationType: ManyToOne
        joinColumn: thread_id
        inverseField: forumPosts
        fetch: EAGER
      - name: replies
        type: ForumPost
        relationType: OneToMany
        mappedBy: parentPost
        inverseField: parentPost
        fetch: LAZY
      - name: parentPost
        type: ForumPost
        relationType: ManyToOne
        joinColumn: parent_post_id
        inverseField: replies
        fetch: LAZY
      - name: reportedContent
        type: ReportedContent
        relationType: OneToMany
        mappedBy: forumPost
        inverseField: forumPost
        fetch: LAZY

  - name: ForumCategory
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: threads
        type: ForumThread
        relationType: OneToMany
        mappedBy: category
        inverseField: category
        fetch: LAZY
      - name: parentCategory
        type: ForumCategory
        relationType: ManyToOne
        joinColumn: parent_category_id
        inverseField: childCategories
        fetch: LAZY
      - name: childCategories
        type: ForumCategory
        relationType: OneToMany
        mappedBy: parentCategory
        inverseField: parentCategory
        fetch: LAZY
      - name: moderators
        type: ForumModerator
        relationType: ManyToMany
        joinTable: moderator_categories
        joinColumns: category_id
        inverseJoinColumns: moderator_id
        mappedBy: moderatedCategories
        fetch: LAZY
        owner: false
        inverseField: moderatedCategories

  - name: Sponsor
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: contactEmail
        type: String
        validation:
          notNull: true
          email: true
      - name: companyType
        type: String
        validation:
          pattern: "^(Sponsor|Advertiser)$"
    relationships:
      - name: sponsoredEvents
        type: LiveEvent
        relationType: OneToMany
        mappedBy: sponsor
        inverseField: sponsor
        fetch: LAZY
      - name: sponsorships
        type: EventSponsorship
        relationType: OneToMany
        mappedBy: sponsor
        inverseField: sponsor
        fetch: LAZY
      - name: adCampaigns
        type: AdCampaign
        relationType: OneToMany
        mappedBy: advertiser
        inverseField: advertiser
        fetch: LAZY

  - name: Booking
    fields:
      - name: bookingDate
        type: Date
        validation:
          notNull: true
      - name: totalAmount
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: tickets
        type: Ticket
        relationType: OneToMany
        mappedBy: booking
        inverseField: booking
        fetch: LAZY
      - name: payment
        type: Payment
        relationType: OneToOne
        joinColumn: payment_id
        inverseField: booking
        fetch: EAGER
        owner: true

  - name: Payment
    fields:
      - name: amount
        type: Double
        validation:
          notNull: true
          min: 0
      - name: paymentDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: booking
        type: Booking
        relationType: OneToOne
        mappedBy: payment
        inverseField: payment
        fetch: LAZY
        owner: false
      - name: method
        type: PaymentMethod
        relationType: ManyToOne
        joinColumn: method_id
        inverseField: payments
        fetch: EAGER

  - name: Playlist
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: creationDate
        type: Date
        validation:
          notNull: true
      - name: isPublic
        type: Boolean
        validation:
          notNull: true
    relationships:
      - name: owner
        type: UserProfile
        relationType: ManyToOne
        joinColumn: owner_id
        inverseField: playlists
        fetch: EAGER
      - name: items
        type: PlaylistItem
        relationType: OneToMany
        mappedBy: playlist
        inverseField: playlist
        fetch: LAZY

  - name: PlaylistItem
    fields:
      - name: position
        type: Integer
        validation:
          notNull: true
          min: 1
    relationships:
      - name: playlist
        type: Playlist
        relationType: ManyToOne
        joinColumn: playlist_id
        inverseField: items
        fetch: EAGER
      - name: track
        type: MusicTrack
        relationType: ManyToOne
        joinColumn: track_id
        inverseField: playlistItems
        fetch: EAGER
      - name: addedBy
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: playlistItems
        fetch: EAGER

  - name: Achievement
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: description
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 255
      - name: achievementDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: achievements
        fetch: EAGER

  - name: Employee
    fields:
      - name: firstName
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: lastName
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: email
        type: String
        validation:
          notNull: true
          email: true
      - name: position
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: productionCompany
        type: ProductionCompany
        relationType: ManyToOne
        joinColumn: company_id
        inverseField: staff
        fetch: EAGER
      - name: shifts
        type: Shift
        relationType: OneToMany
        mappedBy: employee
        inverseField: employee
        fetch: LAZY
      - name: managedLocations
        type: EventLocation
        relationType: OneToMany
        mappedBy: contactPerson
        inverseField: contactPerson
        fetch: LAZY
      - name: role
        type: EmployeeRole
        relationType: ManyToOne
        joinColumn: role_id
        inverseField: employees
        fetch: EAGER


  - name: Shift
    fields:
      - name: shiftDate
        type: Date
        validation:
          notNull: true
      - name: startTime
        type: Date
        validation:
          notNull: true
      - name: endTime
        type: Date
        validation:
          notNull: true
    relationships:
      - name: employee
        type: Employee
        relationType: ManyToOne
        joinColumn: employee_id
        inverseField: shifts
        fetch: EAGER

  - name: DigitalAsset
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: url
        type: String
        validation:
          notNull: true
          size:
            max: 500
    relationships:
      - name: assetType
        type: DigitalAssetType
        relationType: ManyToOne
        joinColumn: type_id
        inverseField: assets
        fetch: EAGER
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: managedAssets
        fetch: EAGER
      - name: license
        type: License
        relationType: OneToOne
        mappedBy: asset
        inverseField: asset
        fetch: LAZY
        owner: false

  - name: License
    fields:
      - name: licenseKey
        type: String
        validation:
          notNull: true
          size:
            min: 10
            max: 100
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: endDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: asset
        type: DigitalAsset
        relationType: OneToOne
        joinColumn: asset_id
        inverseField: license
        fetch: EAGER
        owner: true

  - name: MediaFile
    fields:
      - name: url
        type: String
        validation:
          notNull: true
          size:
            max: 255
      - name: type
        type: String
        validation:
          notNull: true
          size:
            max: 50
    relationships:
      - name: review
        type: Review
        relationType: OneToOne
        mappedBy: mediaFile
        inverseField: mediaFile
        fetch: LAZY
        owner: false

  - name: EventAudience
    fields:
      - name: count
        type: Integer
        validation:
          min: 0
      - name: audienceType
        type: String
        validation:
          pattern: "^(Live|Online)$"
    relationships:
      - name: event
        type: LiveEvent
        relationType: OneToOne
        joinColumn: event_id
        inverseField: audience
        fetch: LAZY
        owner: true

  - name: DevelopmentStudio
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
    relationships:
      - name: games
        type: VideoGame
        relationType: OneToMany
        mappedBy: developerStudio
        inverseField: developerStudio
        fetch: LAZY

  - name: MovieMerchandise
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: movie
        type: Movie
        relationType: ManyToOne
        joinColumn: movie_id
        inverseField: movieMerchandise
        fetch: EAGER

  - name: TVShowMerchandise
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: tvShow
        type: TVShow
        relationType: ManyToOne
        joinColumn: tv_show_id
        inverseField: tvShowMerchandise
        fetch: EAGER

  - name: ArtistAward
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: year
        type: Integer
        validation:
          notNull: true
          min: 1900
    relationships:
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: awards
        fetch: EAGER

  - name: GameReview
    fields:
      - name: rating
        type: Integer
        validation:
          notNull: true
          min: 1
          max: 10
      - name: comment
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gameReviews
        fetch: EAGER
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: gameReviews
        fetch: EAGER
      - name: comments
        type: GameReviewComment
        relationType: OneToMany
        mappedBy: review
        inverseField: review
        fetch: LAZY
      - name: upvotes
        type: GameReviewUpvote
        relationType: OneToMany
        mappedBy: review
        inverseField: review
        fetch: LAZY
      - name: downvotes
        type: GameReviewDownvote
        relationType: OneToMany
        mappedBy: review
        inverseField: review
        fetch: LAZY

  - name: GameReviewComment
    fields:
      - name: commentText
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 255
      - name: commentDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gameReviewComments
        fetch: EAGER
      - name: review
        type: GameReview
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: comments
        fetch: EAGER
      - name: replies
        type: GameReviewComment
        relationType: OneToMany
        mappedBy: parentComment
        inverseField: parentComment
        fetch: LAZY
      - name: parentComment
        type: GameReviewComment
        relationType: ManyToOne
        joinColumn: parent_comment_id
        inverseField: replies
        fetch: LAZY

  - name: OnlinePlatform
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
    relationships:
      - name: streams
        type: StreamingPlatform
        relationType: OneToMany
        mappedBy: onlinePlatform
        inverseField: onlinePlatform
        fetch: LAZY

  - name: StreamingService
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: logoUrl
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: platforms
        type: StreamingPlatform
        relationType: OneToMany
        mappedBy: streamingService
        inverseField: streamingService
        fetch: LAZY
      - name: plans
        type: SubscriptionPlan
        relationType: OneToMany
        mappedBy: service
        inverseField: service
        fetch: LAZY

  - name: DigitalPurchase
    fields:
      - name: purchaseDate
        type: Date
        validation:
          notNull: true
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: digitalPurchases
        fetch: EAGER
      - name: movie
        type: Movie
        relationType: ManyToOne
        joinColumn: movie_id
        inverseField: purchases
        fetch: LAZY
      - name: musicTrack
        type: MusicTrack
        relationType: ManyToOne
        joinColumn: track_id
        inverseField: purchases
        fetch: LAZY
      - name: videoGame
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: purchases
        fetch: LAZY
      - name: transaction
        type: Transaction
        relationType: OneToOne
        joinColumn: transaction_id
        inverseField: digitalPurchase
        fetch: EAGER
        owner: true
      - name: expansionPack
        type: GameExpansionPack
        relationType: ManyToOne
        joinColumn: expansion_pack_id
        inverseField: purchases
        fetch: LAZY

  - name: DigitalAssetType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: assets
        type: DigitalAsset
        relationType: OneToMany
        mappedBy: assetType
        inverseField: assetType
        fetch: LAZY

  - name: GamePlatform
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: videoGames
        type: VideoGame
        relationType: ManyToMany
        joinTable: video_game_platforms
        joinColumns: platform_id
        inverseJoinColumns: game_id
        mappedBy: platforms
        fetch: LAZY
        owner: false
        inverseField: platforms
      - name: type
        type: GamePlatformType
        relationType: ManyToOne
        joinColumn: platform_type_id
        inverseField: gamePlatforms
        fetch: EAGER
  - name: MovieFormat
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: movies
        type: Movie
        relationType: ManyToMany
        joinTable: movie_formats
        joinColumns: format_id
        inverseJoinColumns: movie_id
        mappedBy: formats
        fetch: LAZY
        owner: false
        inverseField: formats

  - name: MusicFormat
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: musicTracks
        type: MusicTrack
        relationType: ManyToMany
        joinTable: music_formats
        joinColumns: track_id
        inverseJoinColumns: format_id
        mappedBy: formats
        fetch: LAZY
        owner: false
        inverseField: formats

  - name: PodcastCategory
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: podcasts
        type: Podcast
        relationType: ManyToMany
        joinTable: podcast_categories
        joinColumns: category_id
        inverseJoinColumns: podcast_id
        mappedBy: categories
        fetch: LAZY
        owner: false
        inverseField: categories

  - name: StreamingContentLicense
    fields:
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: endDate
        type: Date
        validation:
          notNull: true
      - name: region
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: subscriptionPlan
        type: SubscriptionPlan
        relationType: ManyToOne
        joinColumn: plan_id
        inverseField: includedStreamingContentLicenses
        fetch: EAGER
      - name: movie
        type: Movie
        relationType: ManyToOne
        joinColumn: movie_id
        inverseField: streamingLicenses
        fetch: LAZY
      - name: tvShow
        type: TVShow
        relationType: ManyToOne
        joinColumn: tvshow_id
        inverseField: streamingLicenses
        fetch: LAZY
      - name: musicTrack
        type: MusicTrack
        relationType: ManyToOne
        joinColumn: music_track_id
        inverseField: streamingLicenses
        fetch: LAZY
      - name: licenseType
        type: ContentLicenseType
        relationType: ManyToOne
        joinColumn: license_type_id
        inverseField: licenses
        fetch: EAGER

  - name: PodcastGuest
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: bio
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: podcast
        type: Podcast
        relationType: ManyToOne
        joinColumn: podcast_id
        inverseField: guests
        fetch: EAGER
      - name: appearances
        type: PodcastEpisode
        relationType: ManyToMany
        joinTable: podcast_guest_appearances
        joinColumns: episode_id
        inverseJoinColumns: guest_id
        fetch: LAZY
        owner: true
        inverseField: guestAppearances

  - name: GameReviewComment
    fields:
      - name: commentText
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 255
      - name: commentDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gameReviewComments
        fetch: EAGER
      - name: review
        type: GameReview
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: comments
        fetch: EAGER
      - name: replies
        type: GameReviewComment
        relationType: OneToMany
        mappedBy: parentComment
        inverseField: parentComment
        fetch: LAZY
      - name: parentComment
        type: GameReviewComment
        relationType: ManyToOne
        joinColumn: parent_comment_id
        inverseField: replies
        fetch: LAZY

  - name: UserPlaylist
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: isPublic
        type: Boolean
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: userPlaylists
        fetch: EAGER
      - name: items
        type: UserPlaylistItem
        relationType: OneToMany
        mappedBy: playlist
        inverseField: playlist
        fetch: LAZY

  - name: UserPlaylistItem
    fields:
      - name: position
        type: Integer
        validation:
          notNull: true
          min: 1
    relationships:
      - name: playlist
        type: UserPlaylist
        relationType: ManyToOne
        joinColumn: playlist_id
        inverseField: items
        fetch: EAGER
      - name: musicTrack
        type: MusicTrack
        relationType: ManyToOne
        joinColumn: track_id
        inverseField: userPlaylistItems
        fetch: EAGER
      - name: addedBy
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: userPlaylistItems
        fetch: EAGER

  - name: EventSponsorship
    fields:
      - name: amount
        type: Double
        validation:
          notNull: true
          min: 0
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: endDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: event
        type: LiveEvent
        relationType: ManyToOne
        joinColumn: event_id
        inverseField: sponsorships
        fetch: EAGER
      - name: sponsor
        type: Sponsor
        relationType: ManyToOne
        joinColumn: sponsor_id
        inverseField: sponsorships
        fetch: EAGER
      - name: contract
        type: Contract
        relationType: OneToOne
        joinColumn: contract_id
        inverseField: sponsorship
        fetch: EAGER
        owner: true

  - name: Contract
    fields:
      - name: contractNumber
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 50
      - name: terms
        type: String
        validation:
          size:
            max: 2000
    relationships:
      - name: sponsorship
        type: EventSponsorship
        relationType: OneToOne
        mappedBy: contract
        inverseField: contract
        fetch: LAZY
        owner: false

  - name: MerchandiseInventory
    fields:
      - name: stockQuantity
        type: Integer
        validation:
          notNull: true
          min: 0
      - name: lastUpdated
        type: Date
        validation:
          notNull: true
    relationships:
      - name: merchandiseItem
        type: Merchandise
        relationType: OneToOne
        joinColumn: merchandise_id
        mappedBy: inventory
        inverseField: inventory
        fetch: LAZY
        owner: true
      - name: warehouse
        type: Warehouse
        relationType: ManyToOne
        joinColumn: warehouse_id
        inverseField: inventoryItems
        fetch: EAGER

  - name: Warehouse
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: address
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 255
    relationships:
      - name: inventoryItems
        type: MerchandiseInventory
        relationType: OneToMany
        mappedBy: warehouse
        inverseField: warehouse
        fetch: LAZY

  - name: ContentProvider
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: contactEmail
        type: String
        validation:
          notNull: true
          email: true
    relationships:
      - name: providedMovies
        type: Movie
        relationType: OneToMany
        mappedBy: provider
        inverseField: provider
        fetch: LAZY
      - name: providedTvShows
        type: TVShow
        relationType: OneToMany
        mappedBy: provider
        inverseField: provider
        fetch: LAZY
      - name: providedMusicTracks
        type: MusicTrack
        relationType: OneToMany
        mappedBy: provider
        inverseField: provider
        fetch: LAZY
      - name: providedPodcasts
        type: Podcast
        relationType: OneToMany
        mappedBy: provider
        inverseField: provider
        fetch: LAZY

  - name: AdCampaign
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: endDate
        type: Date
        validation:
          notNull: true
      - name: budget
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: advertiser
        type: Sponsor
        relationType: ManyToOne
        joinColumn: advertiser_id
        inverseField: adCampaigns
        fetch: EAGER
      - name: displayedOnPlatforms
        type: StreamingPlatform
        relationType: ManyToMany
        joinTable: ad_campaign_platforms
        joinColumns: platform_id
        inverseJoinColumns: campaign_id
        fetch: LAZY
        owner: true
        inverseField: adCampaigns
      - name: adPlacements
        type: AdPlacement
        relationType: OneToMany
        mappedBy: campaign
        inverseField: campaign
        fetch: LAZY

  - name: ReviewRating
    fields:
      - name: score
        type: Integer
        validation:
          notNull: true
          min: 1
          max: 5
      - name: ratingDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: givenRatings
        fetch: EAGER
      - name: review
        type: Review
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: ratings
        fetch: EAGER

  - name: ReviewLike
    fields:
      - name: likeDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: likedReviews
        fetch: EAGER
      - name: review
        type: Review
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: likes
        fetch: EAGER

  - name: UserActivityLog
    fields:
      - name: activityType
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: activityDate
        type: Date
        validation:
          notNull: true
      - name: details
        type: String
        validation:
          size:
            max: 1000
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: activityLogs
        fetch: EAGER

  - name: FeatureFlag
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: enabled
        type: Boolean
        validation:
          notNull: true
      - name: rolloutPercentage
        type: Integer
        validation:
          min: 0
          max: 100
    relationships:
      - name: enabledForUsers
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_feature_flags
        joinColumns: flag_id
        inverseJoinColumns: user_id
        mappedBy: enabledFeatureFlags
        inverseField: enabledFeatureFlags
        fetch: LAZY
        owner: false

  - name: UserFollower
    fields:
      - name: followDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: follower
        type: UserProfile
        relationType: ManyToOne
        joinColumn: follower_id
        inverseField: following
        fetch: EAGER
      - name: followed
        type: UserProfile
        relationType: ManyToOne
        joinColumn: followed_id
        inverseField: followers
        fetch: EAGER

  - name: ContentRating
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 20
      - name: description
        type: String
        validation:
          size:
            max: 200
    relationships:
      - name: ratedMovies
        type: Movie
        relationType: OneToMany
        mappedBy: contentRating
        inverseField: contentRating
        fetch: LAZY
      - name: ratedTvShows
        type: TVShow
        relationType: OneToMany
        mappedBy: contentRating
        inverseField: contentRating
        fetch: LAZY
      - name: ratedVideoGames
        type: VideoGame
        relationType: OneToMany
        mappedBy: contentRating
        inverseField: contentRating
        fetch: LAZY
      - name: board
        type: ContentRatingBoard
        relationType: ManyToOne
        joinColumn: board_id
        inverseField: ratings
        fetch: EAGER
      - name: ageGroup
        type: ContentRatingAgeGroup
        relationType: ManyToOne
        joinColumn: age_group_id
        inverseField: contentRatings
        fetch: EAGER

  - name: Notification
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: message
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 500
      - name: sentDate
        type: Date
        validation:
          notNull: true
      - name: isRead
        type: Boolean
        validation:
          notNull: true
    relationships:
      - name: recipient
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: notifications
        fetch: EAGER
      - name: type
        type: NotificationType
        relationType: ManyToOne
        joinColumn: type_id
        inverseField: notifications
        fetch: EAGER

  - name: UserSetting
    fields:
      - name: settingName
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: settingValue
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 255
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: settings
        fetch: EAGER

  - name: UserRole
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: users
        type: UserProfile
        relationType: ManyToMany
        mappedBy: userRoles
        fetch: LAZY
        owner: false
        inverseField: userRoles

  - name: ContentTag
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: movies
        type: Movie
        relationType: ManyToMany
        joinTable: movie_tags
        joinColumns: tag_id
        inverseJoinColumns: movie_id
        mappedBy: tags
        fetch: LAZY
        owner: false
        inverseField: tags
      - name: tvShows
        type: TVShow
        relationType: ManyToMany
        joinTable: tvshow_tags
        joinColumns: tag_id
        inverseJoinColumns: tvshow_id
        mappedBy: tags
        fetch: LAZY
        owner: false
        inverseField: tags
      - name: videoGames
        type: VideoGame
        relationType: ManyToMany
        joinTable: videogame_tags
        joinColumns: tag_id
        inverseJoinColumns: game_id
        mappedBy: tags
        fetch: LAZY
        owner: false
        inverseField: tags
      - name: liveEvents
        type: LiveEvent
        relationType: ManyToMany
        joinTable: event_tags
        joinColumns: tag_id
        inverseJoinColumns: event_id
        mappedBy: tags
        fetch: LAZY
        owner: false
        inverseField: tags

  - name: MerchandiseReview
    fields:
      - name: rating
        type: Integer
        validation:
          notNull: true
          min: 1
          max: 5
      - name: comment
        type: String
        validation:
          size:
            max: 500
      - name: reviewDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: merchandiseReviews
        fetch: EAGER
      - name: merchandise
        type: Merchandise
        relationType: ManyToOne
        joinColumn: merchandise_id
        inverseField: reviews
        fetch: EAGER

  - name: MovieStudio
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: location
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: movies
        type: Movie
        relationType: OneToMany
        mappedBy: movieStudio
        inverseField: movieStudio
        fetch: LAZY

  - name: TVShowStudio
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: location
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: tvShows
        type: TVShow
        relationType: OneToMany
        mappedBy: tvShowStudio
        inverseField: tvShowStudio
        fetch: LAZY

  - name: MusicLabel
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
    relationships:
      - name: albums
        type: Album
        relationType: OneToMany
        mappedBy: musicLabel
        inverseField: musicLabel
        fetch: LAZY

  - name: VideoGameRating
    fields:
      - name: ratingSystem
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: rating
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 10
    relationships:
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: ratings
        fetch: EAGER

  - name: UserAchievement
    fields:
      - name: completionDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: userAchievements
        fetch: EAGER
      - name: achievement
        type: GameAchievement
        relationType: ManyToOne
        joinColumn: achievement_id
        inverseField: userAchievements
        fetch: EAGER

  - name: UserFollow
    fields:
      - name: followDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: follower
        type: UserProfile
        relationType: ManyToOne
        joinColumn: follower_id
        inverseField: following
        fetch: EAGER
      - name: followed
        type: UserProfile
        relationType: ManyToOne
        joinColumn: followed_id
        inverseField: followers
        fetch: EAGER

  - name: ArtistSocialMedia
    fields:
      - name: url
        type: String
        validation:
          notNull: true
          size:
            max: 255
    relationships:
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: socialMediaLinks
        fetch: EAGER
      - name: platform
        type: SocialMediaPlatform
        relationType: ManyToOne
        joinColumn: platform_id
        inverseField: artistSocialMedia
        fetch: EAGER

  - name: EventTicketType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: tickets
        type: Ticket
        relationType: OneToMany
        mappedBy: type
        inverseField: type
        fetch: LAZY
      - name: platform
        type: SocialMediaPlatform
        relationType: ManyToOne
        joinColumn: platform_id
        inverseField: artistSocialMedia
        fetch: EAGER

  - name: MerchandiseSale
    fields:
      - name: saleDate
        type: Date
        validation:
          notNull: true
      - name: quantity
        type: Integer
        validation:
          notNull: true
          min: 1
    relationships:
      - name: merchandiseItem
        type: Merchandise
        relationType: ManyToOne
        joinColumn: merchandise_id
        inverseField: sales
        fetch: EAGER
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: merchandiseSales
        fetch: EAGER

  - name: GamePlaySession
    fields:
      - name: startTime
        type: Date
        validation:
          notNull: true
      - name: endTime
        type: Date
        validation:
          notNull: true
      - name: score
        type: Integer
        validation:
          min: 0
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gamePlaySessions
        fetch: EAGER
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: gamePlaySessions
        fetch: EAGER

  - name: ContentLanguage
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: code
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 10
    relationships:
      - name: movies
        type: Movie
        relationType: ManyToMany
        joinTable: movie_languages
        joinColumns: language_id
        inverseJoinColumns: movie_id
        mappedBy: languages
        fetch: LAZY
        owner: false
        inverseField: languages
      - name: tvShows
        type: TVShow
        relationType: ManyToMany
        joinTable: tvshow_languages
        joinColumns: language_id
        inverseJoinColumns: tvshow_id
        mappedBy: languages
        fetch: LAZY
        owner: false
        inverseField: languages
      - name: podcasts
        type: Podcast
        relationType: ManyToMany
        joinTable: podcast_languages
        joinColumns: language_id
        inverseJoinColumns: podcast_id
        mappedBy: languages
        fetch: LAZY
        owner: false
        inverseField: languages

  - name: ContentRatingBoard
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: country
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: ratings
        type: ContentRating
        relationType: OneToMany
        mappedBy: board
        inverseField: board
        fetch: LAZY

  - name: EpisodeCredit
    fields:
      - name: role
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
    relationships:
      - name: episode
        type: Episode
        relationType: ManyToOne
        joinColumn: episode_id
        inverseField: credits
        fetch: EAGER
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: episodeCredits
        fetch: EAGER

  - name: UserPreference
    fields:
      - name: preferenceName
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: preferenceValue
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 255
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: preferences
        fetch: EAGER

  - name: MerchandiseSupplier
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: contactEmail
        type: String
        validation:
          notNull: true
          email: true
    relationships:
      - name: suppliedMerchandise
        type: Merchandise
        relationType: OneToMany
        mappedBy: supplier
        inverseField: supplier
        fetch: LAZY

  - name: MerchandiseOrder
    fields:
      - name: orderDate
        type: Date
        validation:
          notNull: true
      - name: status
        type: String
        validation:
          notNull: true
          pattern: "^(Pending|Shipped|Delivered|Cancelled)$"
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: merchandiseOrders
        fetch: EAGER
      - name: items
        type: MerchandiseOrderItem
        relationType: OneToMany
        mappedBy: order
        inverseField: order
        fetch: LAZY
      - name: shippingDetails
        type: MerchandiseShipping
        relationType: OneToOne
        joinColumn: shipping_id
        inverseField: order
        fetch: EAGER
        owner: true

  - name: MerchandiseOrderItem
    fields:
      - name: quantity
        type: Integer
        validation:
          notNull: true
          min: 1
      - name: priceAtPurchase
        type: Double
        validation:
          notNull: true
          min: 0
    relationships:
      - name: merchandiseItem
        type: Merchandise
        relationType: ManyToOne
        joinColumn: merchandise_id
        inverseField: orderItems
        fetch: EAGER
      - name: order
        type: MerchandiseOrder
        relationType: ManyToOne
        joinColumn: order_id
        inverseField: items
        fetch: EAGER

  - name: GameReviewUpvote
    fields:
      - name: upvoteDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gameReviewUpvotes
        fetch: EAGER
      - name: review
        type: GameReview
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: upvotes
        fetch: EAGER
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: gameReviewUpvotes
        fetch: EAGER

  - name: GameReviewDownvote
    fields:
      - name: downvoteDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gameReviewDownvotes
        fetch: EAGER
      - name: review
        type: GameReview
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: downvotes
        fetch: EAGER
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: gameReviewDownvotes
        fetch: EAGER

  - name: UserMessage
    fields:
      - name: subject
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 100
      - name: body
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 2000
      - name: sentDate
        type: Date
        validation:
          notNull: true
      - name: isRead
        type: Boolean
        validation:
          notNull: true
    relationships:
      - name: sender
        type: UserProfile
        relationType: ManyToOne
        joinColumn: sender_id
        inverseField: sentMessages
        fetch: EAGER
      - name: receiver
        type: UserProfile
        relationType: ManyToOne
        joinColumn: receiver_id
        inverseField: receivedMessages
        fetch: EAGER
      - name: thread
        type: MessageThread
        relationType: ManyToOne
        joinColumn: thread_id
        inverseField: messages
        fetch: EAGER

  - name: MessageThread
    fields:
      - name: subject
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 100
      - name: lastUpdated
        type: Date
        validation:
          notNull: true
    relationships:
      - name: participants
        type: UserProfile
        relationType: ManyToMany
        joinTable: message_thread_participants
        joinColumns: thread_id
        inverseJoinColumns: user_id
        inverseField: MessageThreads
        fetch: LAZY
        owner: true
      - name: messages
        type: UserMessage
        relationType: OneToMany
        mappedBy: thread
        inverseField: thread
        fetch: LAZY

  - name: GamePlaySessionStat
    fields:
      - name: statName
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: statValue
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 255
    relationships:
      - name: gamePlaySession
        type: GamePlaySession
        relationType: ManyToOne
        joinColumn: session_id
        inverseField: stats
        fetch: EAGER

  - name: MerchandiseShipping
    fields:
      - name: shippingDate
        type: Date
        validation:
          notNull: true
      - name: carrier
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: trackingNumber
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 50
    relationships:
      - name: merchandiseItem
        type: Merchandise
        relationType: ManyToOne
        joinColumn: merchandise_id
        inverseField: shipments
        fetch: EAGER
      - name: order
        type: MerchandiseOrder
        relationType: OneToOne
        mappedBy: shippingDetails
        inverseField: shippingDetails
        fetch: LAZY
        owner: false
      - name: shippingMethod
        type: MerchandiseShippingMethod
        relationType: ManyToOne
        joinColumn: shipping_method_id
        inverseField: shipments
        fetch: EAGER
      - name: statusHistory
        type: MerchandiseShippingStatus
        relationType: OneToMany
        mappedBy: shipment
        inverseField: shipment
        fetch: LAZY

  - name: Audiobook
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
      - name: durationHours
        type: Double
        validation:
          min: 0.0
      - name: narrator
        type: String
        validation:
          size:
            max: 100
    relationships:
      - name: author
        type: Artist
        relationType: ManyToOne
        joinColumn: author_id
        inverseField: authoredAudiobooks
        fetch: EAGER
      - name: publisher
        type: Publisher
        relationType: ManyToOne
        joinColumn: publisher_id
        inverseField: audiobooks
        fetch: EAGER
      - name: chapters
        type: AudiobookChapter
        relationType: OneToMany
        mappedBy: audiobook
        inverseField: audiobook
        fetch: LAZY

  - name: AudiobookChapter
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: chapterNumber
        type: Integer
        validation:
          notNull: true
          min: 1
      - name: durationMinutes
        type: Integer
        validation:
          min: 1
    relationships:
      - name: audiobook
        type: Audiobook
        relationType: ManyToOne
        joinColumn: audiobook_id
        inverseField: chapters
        fetch: EAGER

  - name: MusicGenreCategory
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: genres
        type: Genre
        relationType: OneToMany
        mappedBy: category
        inverseField: category
        fetch: LAZY

  - name: ConcertVenue
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: address
        type: String
        validation:
          size:
            max: 255
      - name: capacity
        type: Integer
        validation:
          min: 0
    relationships:
      - name: concerts
        type: LiveEvent
        relationType: OneToMany
        mappedBy: venue
        inverseField: venue
        fetch: LAZY

  - name: Tour
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: endDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: artist
        type: Artist
        relationType: ManyToOne
        joinColumn: artist_id
        inverseField: tours
        fetch: EAGER
      - name: liveEvents
        type: LiveEvent
        relationType: OneToMany
        mappedBy: tour
        inverseField: tour
        fetch: LAZY

  - name: SubscriptionTier
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: features
        type: String
        validation:
          size:
            max: 1000
      - name: price
        type: Double
        validation:
          notNull: true
          min: 0
      - name: billingPeriod
        type: String
        validation:
          pattern: "^(Monthly|Annually)$"
    relationships:
      - name: subscriptionPlan
        type: SubscriptionPlan
        relationType: OneToOne
        mappedBy: tier
        inverseField: tier
        fetch: LAZY
        owner: false


  - name: MovieSoundtrack
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: movie
        type: Movie
        relationType: OneToOne
        joinColumn: movie_id
        inverseField: soundtrack
        fetch: EAGER
        owner: true
      - name: musicTracks
        type: MusicTrack
        relationType: OneToMany
        mappedBy: soundtrack
        inverseField: soundtrack
        fetch: LAZY

  - name: MusicVideo
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
      - name: durationSeconds
        type: Integer
        validation:
          min: 1
    relationships:
      - name: musicTrack
        type: MusicTrack
        relationType: ManyToOne
        joinColumn: track_id
        inverseField: musicVideos
        fetch: EAGER
      - name: director
        type: Artist
        relationType: ManyToOne
        joinColumn: director_id
        inverseField: directedMusicVideos
        fetch: EAGER

  - name: BookSeries
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: description
        type: String
        validation:
          size:
            max: 1000
    relationships:
      - name: books
        type: Book
        relationType: OneToMany
        mappedBy: series
        inverseField: series
        fetch: LAZY

  - name: BookCharacter
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: description
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: books
        type: Book
        relationType: ManyToMany
        joinTable: book_characters
        joinColumns: character_id
        inverseJoinColumns: book_id
        fetch: LAZY
        owner: true
        inverseField: characters

  - name: ContentRatingAgeGroup
    fields:
      - name: ageGroup
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 20
      - name: description
        type: String
        validation:
          size:
            max: 200
    relationships:
      - name: contentRatings
        type: ContentRating
        relationType: OneToMany
        mappedBy: ageGroup
        inverseField: ageGroup
        fetch: LAZY

  - name: GameExpansionPack
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: releaseDate
        type: Date
        validation:
          notNull: true
      - name: price
        type: Double
        validation:
          min: 0
    relationships:
      - name: baseGame
        type: VideoGame
        relationType: ManyToOne
        joinColumn: video_game_id
        inverseField: expansionPacks
        fetch: EAGER
      - name: purchases
        type: DigitalPurchase
        relationType: OneToMany
        mappedBy: expansionPack
        inverseField: expansionPack
        fetch: LAZY

  - name: GameCurrency
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: symbol
        type: String
        validation:
          notNull: true
          size:
            max: 10
    relationships:
      - name: transactions
        type: GameTransaction
        relationType: OneToMany
        mappedBy: currency
        inverseField: currency
        fetch: LAZY

  - name: GameTransaction
    fields:
      - name: amount
        type: Double
        validation:
          notNull: true
          min: 0
      - name: transactionDate
        type: Date
        validation:
          notNull: true
      - name: description
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: gameTransactions
        fetch: EAGER
      - name: currency
        type: GameCurrency
        relationType: ManyToOne
        joinColumn: currency_id
        inverseField: transactions
        fetch: EAGER

  - name: LiveStream
    fields:
      - name: title
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: platformUrl
        type: String
        validation:
          notNull: true
          size:
            max: 255
    relationships:
      - name: host
        type: UserProfile
        relationType: ManyToOne
        joinColumn: host_id
        inverseField: hostedLiveStreams
        fetch: EAGER
      - name: game
        type: VideoGame
        relationType: ManyToOne
        joinColumn: game_id
        inverseField: liveStreams
        fetch: EAGER
      - name: viewers
        type: LiveStreamViewer
        relationType: OneToMany
        mappedBy: liveStream
        inverseField: liveStream
        fetch: LAZY

  - name: LiveStreamViewer
    fields:
      - name: joinTime
        type: Date
        validation:
          notNull: true
      - name: leaveTime
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: watchedLiveStreams
        fetch: EAGER
      - name: liveStream
        type: LiveStream
        relationType: ManyToOne
        joinColumn: live_stream_id
        inverseField: viewers
        fetch: EAGER

  - name: MerchandiseCollection
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: description
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: items
        type: Merchandise
        relationType: OneToMany
        mappedBy: collection
        inverseField: collection
        fetch: LAZY

  - name: MerchandiseCategory
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: merchandise
        type: Merchandise
        relationType: OneToMany
        mappedBy: category
        inverseField: category
        fetch: LAZY

  - name: ForumThreadTag
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: threads
        type: ForumThread
        relationType: ManyToMany
        joinTable: thread_tags
        joinColumns: tag_id
        inverseJoinColumns: thread_id
        fetch: LAZY
        owner: true
        inverseField: tags

  - name: ForumModerator
    fields:
      - name: moderatorSince
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: OneToOne
        joinColumn: user_id
        inverseField: moderator
        fetch: EAGER
        owner: true
      - name: moderatedCategories
        type: ForumCategory
        relationType: ManyToMany
        joinTable: moderator_categories
        joinColumns: moderator_id
        inverseJoinColumns: category_id
        fetch: LAZY
        owner: true
        inverseField: moderators

  - name: UserBadge
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: description
        type: String
        validation:
          size:
            max: 255
      - name: imageUrl
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: users
        type: UserProfile
        relationType: ManyToMany
        joinTable: user_badges
        joinColumns: badge_id
        inverseJoinColumns: user_id
        fetch: LAZY
        owner: false
        inverseField: badges

  - name: UserLevel
    fields:
      - name: levelNumber
        type: Integer
        validation:
          notNull: true
          min: 1
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: pointsRequired
        type: Integer
        validation:
          notNull: true
          min: 0
    relationships:
      - name: users
        type: UserProfile
        relationType: OneToMany
        mappedBy: userLevel
        inverseField: userLevel
        fetch: LAZY

  - name: PaymentMethod
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: type
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: payments
        type: Payment
        relationType: OneToMany
        mappedBy: method
        inverseField: method
        fetch: LAZY

  - name: Country
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: code
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 10
    relationships:
      - name: userProfiles
        type: UserProfile
        relationType: OneToMany
        mappedBy: country
        inverseField: country
        fetch: LAZY

  - name: ReportedContent
    fields:
      - name: reason
        type: String
        validation:
          notNull: true
          size:
            min: 5
            max: 500
      - name: reportDate
        type: Date
        validation:
          notNull: true
      - name: status
        type: String
        validation:
          notNull: true
          pattern: "^(Pending|Resolved|Dismissed)$"
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: reportedContent
        fetch: EAGER
      - name: review
        type: Review
        relationType: ManyToOne
        joinColumn: review_id
        inverseField: reportedContent
        fetch: LAZY
      - name: forumPost
        type: ForumPost
        relationType: ManyToOne
        joinColumn: post_id
        inverseField: reportedContent
        fetch: LAZY

  - name: AdPlacement
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: location
        type: String
        validation:
          size:
            max: 255
      - name: adType
        type: String
        validation:
          notNull: true
          pattern: "^(Banner|Video|Popup)$"
    relationships:
      - name: campaign
        type: AdCampaign
        relationType: ManyToOne
        joinColumn: campaign_id
        inverseField: adPlacements
        fetch: EAGER

  - name: ReviewReply
    fields:
      - name: commentText
        type: String
        validation:
          notNull: true
          size:
            min: 1
            max: 255
      - name: replyDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: reviewReplies
        fetch: EAGER
      - name: reviewComment
        type: ReviewComment
        relationType: ManyToOne
        joinColumn: comment_id
        inverseField: replies
        fetch: EAGER

  - name: UserConnection
    fields:
      - name: connectionDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user1
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user1_id
        inverseField: connections
        fetch: EAGER
      - name: user2
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user2_id
        inverseField: connectedBy
        fetch: EAGER
      - name: type
        type: ConnectionType
        relationType: ManyToOne
        joinColumn: type_id
        inverseField: userConnections
        fetch: EAGER

  - name: ConnectionType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: userConnections
        type: UserConnection
        relationType: OneToMany
        mappedBy: type
        inverseField: type
        fetch: LAZY

  - name: NotificationType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: template
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: notifications
        type: Notification
        relationType: OneToMany
        mappedBy: type
        inverseField: type
        fetch: LAZY

  - name: MerchandiseStockHistory
    fields:
      - name: changeDate
        type: Date
        validation:
          notNull: true
      - name: quantityChange
        type: Integer
        validation:
          notNull: true
      - name: reason
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: merchandiseItem
        type: Merchandise
        relationType: ManyToOne
        joinColumn: merchandise_id
        inverseField: stockHistory
        fetch: EAGER

  - name: MovieFestival
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 255
      - name: startDate
        type: Date
        validation:
          notNull: true
      - name: endDate
        type: Date
        validation:
          notNull: true
      - name: location
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: movies
        type: Movie
        relationType: ManyToMany
        joinTable: festival_movies
        joinColumns: festival_id
        inverseJoinColumns: movie_id
        fetch: LAZY
        owner: true
        inverseField: festivals

  - name: ArtistGroup
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: formationDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: members
        type: Artist
        relationType: ManyToMany
        joinTable: artist_group_members
        joinColumns: group_id
        inverseJoinColumns: artist_id
        fetch: LAZY
        owner: true
        inverseField: groups

  - name: GamePlatformType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
    relationships:
      - name: gamePlatforms
        type: GamePlatform
        relationType: OneToMany
        mappedBy: type
        inverseField: type
        fetch: LAZY

  - name: SubscriptionFeature
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 100
      - name: description
        type: String
        validation:
          size:
            max: 500
    relationships:
      - name: subscriptionPlans
        type: SubscriptionPlan
        relationType: ManyToMany
        joinTable: subscription_plan_features
        joinColumns: feature_id
        inverseJoinColumns: plan_id
        fetch: LAZY
        owner: true
        inverseField: features

  - name: UserRating
    fields:
      - name: rating
        type: Integer
        validation:
          notNull: true
          min: 1
          max: 5
      - name: ratingDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: givenUserRatings
        fetch: EAGER
      - name: ratedUser
        type: UserProfile
        relationType: ManyToOne
        joinColumn: rated_user_id
        inverseField: receivedUserRatings
        fetch: EAGER

  - name: UserBlockedList
    fields:
      - name: blockedDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: blocker
        type: UserProfile
        relationType: ManyToOne
        joinColumn: blocker_id
        inverseField: blockedUsers
        fetch: EAGER
      - name: blocked
        type: UserProfile
        relationType: ManyToOne
        joinColumn: blocked_id
        inverseField: blockedByUsers
        fetch: EAGER

  - name: ContentLicenseType
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: description
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: licenses
        type: StreamingContentLicense
        relationType: OneToMany
        mappedBy: licenseType
        inverseField: licenseType
        fetch: LAZY

  - name: MerchandiseShippingMethod
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: cost
        type: Double
        validation:
          notNull: true
          min: 0
      - name: estimatedDeliveryTime
        type: String
        validation:
          size:
            max: 50
    relationships:
      - name: shipments
        type: MerchandiseShipping
        relationType: OneToMany
        mappedBy: shippingMethod
        inverseField: shippingMethod
        fetch: LAZY

  - name: MerchandiseShippingStatus
    fields:
      - name: status
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: date
        type: Date
        validation:
          notNull: true
    relationships:
      - name: shipment
        type: MerchandiseShipping
        relationType: ManyToOne
        joinColumn: shipment_id
        inverseField: statusHistory
        fetch: EAGER

  - name: UserLoyaltyProgram
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: pointsBalance
        type: Integer
        validation:
          notNull: true
          min: 0
    relationships:
      - name: user
        type: UserProfile
        relationType: OneToOne
        joinColumn: user_id
        inverseField: loyaltyProgram
        fetch: EAGER
        owner: true

  - name: SocialMediaPlatform
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: url
        type: String
        validation:
          notNull: true
          size:
            max: 255
    relationships:
      - name: artistSocialMedia
        type: ArtistSocialMedia
        relationType: OneToMany
        mappedBy: platform
        inverseField: platform
        fetch: LAZY

  - name: EmployeeRole
    fields:
      - name: name
        type: String
        validation:
          notNull: true
          size:
            min: 2
            max: 50
      - name: description
        type: String
        validation:
          size:
            max: 255
    relationships:
      - name: employees
        type: Employee
        relationType: OneToMany
        mappedBy: role
        inverseField: role
        fetch: LAZY

  - name: EpisodeReview
    fields:
      - name: rating
        type: Integer
        validation:
          notNull: true
          min: 1
          max: 10
      - name: comment
        type: String
        validation:
          size:
            max: 500
      - name: reviewDate
        type: Date
        validation:
          notNull: true
    relationships:
      - name: user
        type: UserProfile
        relationType: ManyToOne
        joinColumn: user_id
        inverseField: episodeReviews
        fetch: EAGER
      - name: episode
        type: Episode
        relationType: ManyToOne
        joinColumn: episode_id
        inverseField: reviews
        fetch: EAGER